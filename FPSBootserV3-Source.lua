do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v20)if (v1(v20,2)==79) then local v72=0;while true do if (v72==0) then v19=v0(v3(v20,1,1));return "";end end else local v73=v2(v0(v20,16));if v19 then local v95=0;local v96;while true do if (v95==0) then v96=v5(v73,v19);v19=nil;v95=1;end if (v95==1) then return v96;end end else return v73;end end end);local function v21(v22,v23,v24)if v24 then local v74=(v22/(2^(v23-(2 -1))))%((5 -(11 -8))^(((v24-(892 -(322 + 569))) -(v23-((726 -(134 + 591)) + 0))) + 1 + 0)) ;return v74-(v74%(1 + 0)) ;else local v75=(1 + 1)^(v23-(1 + 0)) ;return (((v22%(v75 + v75))>=v75) and (665 -(517 + 147))) or (0 + 0) ;end end local function v25()local v38=1793 -(450 + 1343) ;local v39;while true do if (v38==((680 -(492 + 188)) + 0)) then v39=v1(v16,v18,v18);v18=v18 + (4 -3) ;v38=1 -0 ;end if (v38==1) then return v39;end end end local function v26()local v40,v41=v1(v16,v18,v18 + 2 + 0 );v18=v18 + 2 + 0 ;return (v41 * 256) + v40 ;end local function v27()local v42,v43,v44,v45=v1(v16,v18,v18 + 3 + 0 );v18=v18 + ((2030 -1596) -(143 + 287)) ;return (v45 * 16777216) + (v44 * (67478 -(1326 + 616))) + (v43 * (321 -65)) + v42 ;end local function v28()local v46=v27();local v47=v27();local v48=1 + 0 ;local v49=(v21(v47,1,526 -(505 + (1268 -(202 + 1065))) ) * ((6 -4)^(9 + 13 + 10))) + v46 ;local v50=v21(v47,2 + 19 ,99 -68 );local v51=((v21(v47,1836 -(171 + 1633) )==(1 + 0)) and  -(1 + (0 -0))) or (1720 -(865 + 854)) ;if (v50==(0 + 0)) then if (v49==(0 + 0)) then return v51 * (706 -(63 + (2438 -1795))) ;else v50=1759 -(1510 + 248) ;v48=1882 -(1412 + 470) ;end elseif (v50==2047) then return ((v49==(0 + 0)) and (v51 * ((1 -0)/0))) or (v51 * NaN) ;end return v8(v51,v50-(381 + 642) ) * (v48 + (v49/((1865 -(194 + 1669))^((2 -0) + 50)))) ;end local function v29(v30)local v52;if  not v30 then v30=v27();if (v30==(0 + 0)) then return "";end end v52=v3(v16,v18,(v18 + v30) -(499 -(403 + 95)) );v18=v18 + v30 ;local v53={};for v65=3 -2 , #v52 do v53[v65]=v2(v1(v3(v52,v65,v65)));end return v6(v53);end local v31=v27;local function v32(...)return {...},v12("#",...);end local function v33()local v54=0;local v55;local v56;local v57;local v58;local v59;local v60;local v61;while true do if ((4 -3)==v54) then local v86=0 + 0 ;while true do if (v86~=(2 -1)) then else v54=7 -5 ;break;end if (v86==0) then v57=nil;v58=nil;v86=1 -0 ;end end end if (v54~=(93 -(5 + 85))) then else v61=nil;while true do local v97=0;local v98;while true do if (v97~=(0 + 0)) then else v98=0;while true do if (v98~=(2 -1)) then else if (v55~=1) then else local v106=0;while true do if ((0 + 0)~=v106) then else local v111=365 -(8 + 357) ;local v112;while true do if (v111==(0 + 0)) then v112=1062 -(538 + 524) ;while true do if (v112~=(2 -1)) then else v106=1 + 0 ;break;end if (v112==(0 + 0)) then v59={v56,v57,nil,v58};v60=v27();v112=1077 -(116 + 960) ;end end break;end end end if (v106~=(3 -2)) then else v61={};v55=2;break;end end end if (v55==(2 -0)) then local v107=0 + 0 ;local v108;while true do if ((0 + 0)~=v107) then else v108=0 -0 ;while true do if (v108==1) then for v118=739 -(148 + 590) ,v27() do local v119=0 + 0 ;local v120;local v121;while true do if (1~=v119) then else while true do if (v120==(0 + 0)) then v121=v25();if (v21(v121,1 + 0 ,1 + 0 )==(0 -0)) then local v267=0 + 0 ;local v268;local v269;local v270;local v271;while true do if (v267==1) then local v321=0;while true do if ((0 + 0)==v321) then v270=nil;v271=nil;v321=118 -(110 + 7) ;end if (v321~=(441 -(111 + 329))) then else v267=1581 -(465 + 1114) ;break;end end end if (v267~=(1190 -(693 + 495))) then else while true do if ((14 -(7 + 6))~=v268) then else local v341=0;local v342;while true do if (v341==(0 -0)) then v342=0;while true do if (v342~=(0 -0)) then else local v383=0;while true do if (v383==(0 -0)) then local v386=356 -(18 + 338) ;while true do if ((53 -(43 + 10))~=v386) then else v271={v26(),v26(),nil,nil};if (v269==(1673 -(1122 + 551))) then local v392=994 -(891 + 103) ;local v393;while true do if (0~=v392) then else v393=0 -0 ;while true do if (v393~=(0 + 0)) then else v271[4 -1 ]=v26();v271[4]=v26();break;end end break;end end elseif (v269==(1967 -(1866 + 100))) then v271[8 -5 ]=v27();elseif (v269==2) then v271[3]=v27() -((1420 -(66 + 1352))^(11 + 5)) ;elseif (v269~=3) then else local v402=0 -0 ;local v403;local v404;while true do if (v402~=1) then else while true do if ((0 + 0)~=v403) then else v404=0 + 0 ;while true do if (v404==(402 -(318 + 84))) then v271[1 + 2 ]=v27() -((8 -6)^(8 + 8)) ;v271[1874 -(464 + 1406) ]=v26();break;end end break;end end break;end if (v402==(0 + 0)) then local v405=0 -0 ;while true do if (v405==(1736 -(168 + 1568))) then v403=164 -(7 + 157) ;v404=nil;v405=1;end if (v405==1) then v402=1094 -(187 + 906) ;break;end end end end end v386=1;end if ((1 + 0)==v386) then v383=1333 -(739 + 593) ;break;end end end if (v383==(1993 -(103 + 1889))) then v342=3 -2 ;break;end end end if ((2 -1)~=v342) then else v268=6 -4 ;break;end end break;end end end if (v268~=(9 -6)) then else if (v21(v270,3 + 0 ,3)==(744 -(474 + 269))) then v271[1227 -(231 + 992) ]=v61[v271[4]];end v56[v118]=v271;break;end if (v268~=(1977 -(1615 + 362))) then else local v344=0;local v345;while true do if (v344~=0) then else v345=219 -(147 + 72) ;while true do if (v345==1) then v268=3 -2 ;break;end if (v345==(0 + 0)) then local v384=0 + 0 ;local v385;while true do if (v384==(719 -(478 + 241))) then v385=0 + 0 ;while true do if ((1001 -(74 + 927))~=v385) then else local v391=0 + 0 ;while true do if (v391==(1909 -(540 + 1369))) then v269=v21(v121,2 + 0 ,1692 -(882 + 807) );v270=v21(v121,17 -13 ,6);v391=1;end if ((1 -0)==v391) then v385=1 + 0 ;break;end end end if (v385~=(1 -0)) then else v345=2 -1 ;break;end end break;end end end end break;end end end if (v268~=(1 + 1)) then else local v346=0 + 0 ;local v347;local v348;while true do if (v346~=(1 + 0)) then else while true do if (v347~=(0 -0)) then else v348=0 -0 ;while true do if ((1130 -(369 + 760))==v348) then v268=1399 -(480 + 916) ;break;end if (v348~=(0 + 0)) then else local v387=0;while true do if (v387~=(1205 -(1096 + 108))) then else v348=1;break;end if (v387~=0) then else if (v21(v270,1 + 0 ,596 -(207 + 388) )==(3 -2)) then v271[5 -3 ]=v61[v271[2]];end if (v21(v270,792 -(279 + 511) ,2)==(1 + 0)) then v271[3 -0 ]=v61[v271[7 -4 ]];end v387=1;end end end end break;end end break;end if (v346==(1905 -(35 + 1870))) then v347=1648 -(775 + 873) ;v348=nil;v346=1 -0 ;end end end end break;end if (v267==(847 -(805 + 42))) then v268=372 -(161 + 211) ;v269=nil;v267=2 -1 ;end end end break;end end break;end if (v119~=(0 -0)) then else v120=0 -0 ;v121=nil;v119=2 -1 ;end end end v55=2 + 1 ;break;end if (v108==(0 + 0)) then local v113=0;while true do if (v113~=(323 -(208 + 114))) then else v108=2 -1 ;break;end if (v113==0) then for v222=2 -1 ,v60 do local v223=0;local v224;local v225;local v226;while true do if ((0 + 0)==v223) then v224=0;v225=nil;v223=2 -1 ;end if (v223==(631 -(177 + 453))) then v226=nil;while true do if (v224~=(1 -0)) then else if (v225==(532 -(59 + 472))) then v226=v25()~=(418 -(25 + 393)) ;elseif (v225==(41 -(7 + 32))) then v226=v28();elseif (v225~=(2 + 1)) then else v226=v29();end v61[v222]=v226;break;end if (v224==(1259 -(174 + 1085))) then local v286=0;while true do if (v286==(1 + 0)) then v224=510 -(182 + 327) ;break;end if (v286~=(1701 -(440 + 1261))) then else v225=v25();v226=nil;v286=1 + 0 ;end end end end break;end end end v59[119 -(24 + 92) ]=v25();v113=1;end end end end break;end end end break;end if ((0 -0)~=v98) then else local v104=0 + 0 ;local v105;while true do if (0==v104) then v105=0 + 0 ;while true do if (v105==0) then if ((6 -3)~=v55) then else local v114=1127 -(195 + 932) ;local v115;while true do if (v114~=(0 + 0)) then else v115=0;while true do local v227=0;while true do if (v227~=0) then else if (v115==(331 -(288 + 43))) then local v272=1182 -(643 + 539) ;local v273;while true do if ((0 + 0)==v272) then v273=0 -0 ;while true do if (v273==(0 + 0)) then for v353=1,v27() do v57[v353-(2 -1) ]=v33();end for v355=1,v27() do v58[v355]=v27();end v273=1 -0 ;end if (v273~=(627 -(47 + 579))) then else v115=3 -2 ;break;end end break;end end end if (v115~=(1359 -(1165 + 193))) then else return v59;end break;end end end break;end end end if (v55~=(1374 -(808 + 566))) then else local v116=678 -(218 + 460) ;local v117;while true do if (v116~=(0 -0)) then else v117=0 -0 ;while true do if ((1 + 0)~=v117) then else v58={};v55=1 -0 ;break;end if (v117~=0) then else local v237=0 + 0 ;local v238;while true do if ((987 -(781 + 206))==v237) then v238=0 + 0 ;while true do if (v238==0) then local v322=0 + 0 ;while true do if (v322~=(0 + 0)) then else v56={};v57={};v322=1113 -(154 + 958) ;end if (v322~=(1 + 0)) then else v238=1;break;end end end if (v238~=(1 + 0)) then else v117=1876 -(786 + 1089) ;break;end end break;end end end end break;end end end v105=323 -(283 + 39) ;end if (v105~=(1738 -(1471 + 266))) then else v98=1 + 0 ;break;end end break;end end end end break;end end end break;end if (v54==(0 + 0)) then local v87=0 + 0 ;while true do if ((2 -1)==v87) then v54=945 -(245 + 699) ;break;end if ((1708 -(326 + 1382))~=v87) then else v55=1192 -(525 + 667) ;v56=nil;v87=1;end end end if (v54~=(3 -1)) then else local v88=99 -(27 + 72) ;local v89;while true do if (v88==0) then v89=394 -(47 + 347) ;while true do if (v89==(675 -(570 + 105))) then v59=nil;v60=nil;v89=1 + 0 ;end if (v89==(1 + 0)) then v54=3;break;end end break;end end end end end local function v34(v35,v36,v37)local v62=v35[1];local v63=v35[2];local v64=v35[3];return function(...)local v67=1;local v68= -1;local v69={...};local v70=v12("#",...) -1 ;local function v71()local v76=v62;local v77=v63;local v78=v64;local v79=v32;local v80={};local v81={};local v82={};for v90=(0 -0) -0 ,v70 do if (((6537 -4163)<=(4136 -(481 + 540))) and (v90>=v78)) then v80[v90-v78 ]=v69[v90 + (993 -(721 + 259 + 12)) ];else v82[v90]=v69[v90 + (1566 -(704 + 861)) ];end end local v83=(v70-v78) + (1 -0) ;local v84;local v85;while true do local v91=25 -((505 -(257 + 243)) + 20) ;local v92;while true do if (((2681 -(641 + 74))<(1574 + 2863)) and (v91==(0 + 0))) then v92=0;while true do if (((4086 + 397)>=3153) and (v92==0)) then local v103=0 + (0 -0) ;while true do if ((((6441 -4146) -(19 + (1194 -497)))<4816) and (v103==0)) then v84=v76[v67];v85=v84[4 -3 ];v103=1 + 0 ;end if ((v103==1) or (2147<(1913 -(332 + 196)))) then v92=1 + 0 ;break;end end end if ((v92==(1 + (930 -(682 + 248)))) or ((5458 -3251)==(1339 -(231 + 499)))) then if ((v85<=(1268 -(500 + 749))) or ((5134 -(933 + 712))<=(70 + 23))) then if ((v85<=9) or ((1816 + 2736)<(4651 -(1125 + 614)))) then if ((((6733 -(571 + 414)) -(52 + 870))==4826) and (v85<=(3 + 1))) then if ((v85<=1) or (899>=(1375 + 1486))) then if ((v85==(0 -0)) or ((3793 -2651)>4451)) then if (((12103 -(353 + 7243))>1148) and (v84[2]==v82[v84[1498 -(845 + 649) ]])) then v67=v67 + 1 ;else v67=v84[1 + 2 ];end else v82[v84[5 -3 ]][v84[(983 -(731 + 250)) + 1 ]]=v82[v84[4 -0 ]];end elseif ((v85<=(1131 -(140 + 989))) or ((1161 + 1923)>=(18066 -13771))) then v67=v84[1 + 2 ];elseif ((v85==(3 + 0)) or (2311<(2466 -1649))) then local v179=0;local v180;local v181;local v182;local v183;while true do if (((432 + 177 + 625)<(5879 -(860 + 336))) and (v179==(4 -2))) then while true do if ((((1363 -(30 + 1333)) -0)==v180) or (2297<=(1241 -(48 + 174)))) then local v274=874 -((1032 -525) + 367) ;while true do if (((1557 + 1875)<4077) and (v274==(0 + 0))) then v181=v84[(284 + 739) -(435 + 586) ];v182={v82[v181](v82[v181 + 1 + 0 ])};v274=1 + 0 ;end if ((v274==(1 + 0)) or ((2211 -(234 + 1499))>(2635 + 89))) then v180=(2236 -1242) -(454 + 539) ;break;end end end if (((4843 -(1019 + 772))>=(515 + 118)) and (v180==(1824 -(1781 + 42)))) then v183=(0 + 0) -0 ;for v287=v181,v84[14 -10 ] do local v288=0 -0 ;local v289;while true do if ((4133>=(5773 -1827)) and (v288==(0 + (0 -0)))) then v289=0;while true do if ((1914>993) and (v289==(1308 -(260 + 1048)))) then v183=v183 + (2 -1) ;v82[v287]=v182[v183];break;end end break;end end end break;end end break;end if ((v179==(39 -(4 + 35))) or (681>=(4585 -2042))) then v180=0 -0 ;v181=nil;v179=295 -(23 + 239 + 32) ;end if (((10933 -5982)>=(987 + 2564)) and (v179==1)) then v182=nil;v183=nil;v179=1 + 1 ;end end else local v184=0 + 0 ;local v185;while true do if ((v184==(0 -0)) or ((512 + 527)>=(1076 + 1718))) then v185=v84[7 -5 ];v82[v185]=v82[v185](v13(v82,v185 + (1817 -(528 + 1288)) ,v84[2 + 1 ]));break;end end end elseif (((21165 -16717)>(9001 -5193)) and (v85<=(1 + 5 + 0))) then if ((3358<=(10194 -6092)) and (v85>5)) then local v125=0 + 0 ;local v126;local v127;while true do if ((v125==0) or (830==3583)) then v126=0 -0 ;v127=nil;v125=534 -(250 + 283) ;end if ((v125==(1154 -(223 + 930))) or ((3066 -(553 + 1315))>=3102)) then while true do if (((442 + 316)>((933 + 366) -(851 + 222))) and (v126==0)) then v127=v84[2 + 0 ];v82[v127](v13(v82,v127 + (3 -2) ,v68));break;end end break;end end else local v128=0 -0 ;local v129;local v130;while true do if ((v128==(0 + 0)) or (((1954 -(102 + 75)) -(144 + 965))>(11108 -7384))) then v129=v84[(1340 + 532) -(459 + 1411) ];v130={};v128=1235 -(339 + 895) ;end if ((v128==(4 -3)) or ((4971 -(164 + 473))==1947)) then for v232=4 -3 , #v81 do local v233=1347 -(847 + 500) ;local v234;local v235;while true do if ((v233==1) or ((4407 + 253)<(7451 -5416))) then while true do if ((v234==(0 + 0)) or (4292<=(171 + 843))) then v235=v81[v232];for v324=(497 + 474) -(595 + 376) , #v235 do local v325=1725 -(129 + 1596) ;local v326;local v327;local v328;local v329;while true do if ((v325==(0 + 0)) or ((2712 + 1872)<747)) then v326=1709 -(1035 + 674) ;v327=nil;v325=1003 -((630 -475) + 847) ;end if ((3304>(2180 + 152)) and (v325==(799 -(463 + 335)))) then v328=nil;v329=nil;v325=2 -0 ;end if ((v325==(1 + (2 -1))) or ((9287 -5383)<=(69 + 2168 + 895))) then while true do if ((v326==(630 -(468 + 161))) or ((2750 + 1143)>(5750 -((408 -(346 + 24)) + 1660)))) then v329=v327[1594 -(793 + 765 + 34) ];if ((((5301 -2944) -(913 + 526))<(3639 + 1184)) and (v328==v82) and (v329>=v129)) then local v380=0 -0 ;local v381;while true do if ((v380==(0 -0)) or ((17287 -13324)<(7420 -5275))) then v381=0;while true do if (((0 + 0)==v381) or ((2160 -1202)==(2702 -(212 + 1069)))) then v130[v329]=v328[v329];v327[1 + 0 ]=v130;break;end end break;end end end break;end if (((5483 -3243)==(181 + 2059)) and ((0 -0)==v326)) then v327=v235[v324];v328=v327[1743 -(1352 + 390) ];v326=1 -0 ;end end break;end end end break;end end break;end if ((((8632 -4070) -(252 + 334))>=(637 -(282 + 53))) and (v233==(0 + 0 + 0))) then v234=0;v235=nil;v233=1433 -(1075 + 357) ;end end end break;end end end elseif ((v85<=(14 -7)) or (3332<=(780 + 1986))) then local v131=0 -0 ;local v132;local v133;local v134;local v135;while true do if (((9456 -5045)>(4404 -(1551 + 310))) and (v131==(4 -2))) then while true do if ((3603<(9516 -5701)) and (((2003 -(74 + 1340)) -((2405 -(1504 + 467)) + 155))==v132)) then local v246=(3453 -2178) -(607 + 668) ;while true do if ((v246==(0 -0)) or (((3965 -(1069 + 708)) -531)==(3185 + 1070))) then v133=v77[v84[(15 -7) -5 ]];v134=nil;v246=2 -1 ;end if (((1362 -(796 + 422))<=(4555 -2274)) and (v246==(1 + 0))) then v132=4 -3 ;break;end end end if ((v132==1) or (3749<=((9949 -6115) -(245 + 1741)))) then local v247=0 + 0 ;while true do if ((4866>=(185 + (782 -(463 + 91)))) and (v247==(0 + 0))) then v135={};v134=v10({},{__index=function(v291,v292)local v309=1344 -(182 + 1162) ;local v310;while true do if (((2248 -(1042 + 281))<=(2068 -(806 + 277))) and (v309==(344 -(145 + 199)))) then local v340=0 -(318 -(251 + 67)) ;while true do if (((3795 -(511 + 627))>=1620) and (v340==(1084 -(378 + 706)))) then v310=v135[v292];return v310[1694 -(112 + 1581) ][v310[2 + 0 ]];end end end end end,__newindex=function(v291,v292,v293)local v311=1270 -(572 + 698) ;local v312;local v313;while true do if (((2 -1)==v311) or ((2964 + 336)>(5256 -(98 + 578)))) then while true do if (((0 -0)==v312) or ((1868 -(395 + 1038))>=(15230 -11129))) then v313=v135[v292];v313[1][v313[2 + 0 ]]=v293;break;end end break;end if ((v311==(0 + 0)) or ((5557 -((2722 -(194 + 1741)) + 21))==(526 + 805))) then v312=0;v313=nil;v311=1 + 0 ;end end end});v247=1 + 0 ;end if ((v247==((3 -2) -0)) or (((3864 -1366) + 893)<(3483 -(1094 + 717)))) then v132=829 -(311 + 516) ;break;end end end if ((v132==(1 + 1)) or (61>(693 -(68 + 80)))) then for v262=1642 -(1279 + 362) ,v84[1416 -(1109 + 303) ] do local v263=655 -(277 + 378) ;local v264;local v265;local v266;while true do if (((1 -0)==v263) or ((3338 + 21 + 301)<=(1761 -(747 + 641)))) then v266=nil;while true do if (((0 -0)==v264) or ((1650 -(492 + (764 -277)))>=(3861 -((1325 -979) + 103 + 44)))) then v265=140 -(13 + 127) ;v266=nil;v264=1360 -(257 + 1102) ;end if ((v264==(1 + 0)) or ((4202 -(1378 + 502))>=(4632 -(1124 + 854)))) then while true do if (((2886 -1091)==((3687 -2219) + 327)) and ((2 -1)==v265)) then if ((v266[1]==(30 -21)) or ((266 + 313)>=((2306 + 4392) -3380))) then v135[v262-(2 -1) ]={v82,v266[3 + 0 ]};else v135[v262-(1718 -(510 + 301 + 906)) ]={v36,v266[3]};end v81[ #v81 + (1 -0) ]=v135;break;end if ((((1953 -(277 + 1676)) -0)==v265) or ((3574 + 1131)<=774)) then local v366=1034 -(127 + 907) ;while true do if (((15784 -12349)>=(2296 -660)) and (v366==(1782 -(208 + 506 + 1068)))) then v67=v67 + 1 ;v266=v76[v67];v366=1;end if (((1 + 0)==v366) or ((2529 + 271)>=((3898 + 1906) -2062))) then v265=1;break;end end end end break;end end break;end if ((0==v263) or ((234 + 960)>(8687 -5046))) then v264=0 + (1430 -(1063 + 367)) ;v265=nil;v263=2 -1 ;end end end v82[v84[2]]=v34(v133,v134,v37);break;end end break;end if (((1756 + 1544)>=1016) and (v131==(0 -0))) then v132=1876 -(1870 + 6) ;v133=nil;v131=1274 -(1232 + 41) ;end if ((v131==(4 -3)) or (948>=(10035 -7211))) then v134=nil;v135=nil;v131=8 -6 ;end end elseif (((583 + 381)<=(993 + 183)) and (v85==(25 -17))) then v82[v84[(908 + 287) -(140 + (1075 -(9 + 13))) ]]= #v82[v84[3]];else v82[v84[1356 -(289 + 1065) ]]=v82[v84[9 -6 ]];end elseif (((10865 -6537)>=(2078 -(163 + (428 -(171 + 39))))) and (v85<=(1503 -(860 + (2029 -(1093 + 307)))))) then if ((1044<(5558 -(945 + 336))) and (v85<=11)) then if (((56 + 408)<=(901 + 225)) and (v85==10)) then local v136=0 + 0 ;local v137;local v138;while true do if ((v136==((252 -(93 + 159)) + 0)) or ((16774 -13272)==(2246 + 1295))) then v137=518 -(158 + 256 + 104) ;v138=nil;v136=(57 + 184) -(89 + 151) ;end if ((((6471 -(953 + 262)) -(3718 -(239 + 191)))<(829 + 1925)) and (v136==(1 + 0))) then while true do if (((3337 + 785 + 561)>3048) and ((0 -0)==v137)) then v138=v84[2];do return v13(v82,v138,v138 + v84[2 + 1 ] );end break;end end break;end end elseif ((v82[v84[2 + 0 ]]==v84[1 + 3 ]) or ((25 + 3657)<66)) then v67=v67 + (272 -(203 + 34 + (102 -68))) ;else v67=v84[2 + 1 ];end elseif ((v85<=12) or ((3216 -788)==(4175 -(999 + 451)))) then local v139=0 + (1076 -(757 + 319)) ;local v140;local v141;while true do if ((v139==(1 -0)) or ((3518 -(14 + 14 + 728))<=(25 + 524))) then while true do if ((v140==0) or ((1179 + 1088)<=(97 -66))) then v141=v84[2];v82[v141]=v82[v141]();break;end end break;end if ((v139==(0 -0)) or ((2897 -(1244 + 349))==(3475 -(1216 + 191)))) then v140=(0 -0) -(178 -(23 + 155)) ;v141=nil;v139=1 -0 ;end end elseif (((1478 -(146 + 157 + (86 -15)))>(2644 -(1439 + 363))) and (v85==13)) then v82[v84[2]]();else v82[v84[2]]=v84[(1556 -(1232 + 318)) -3 ];end elseif ((v85<=(4 + 12)) or (2705<2260)) then if ((v85>(4 + 11)) or (((9022 + 367) -(162 + 4246))<(4972 -(87 + 11 + 34)))) then local v142=51 -(24 + (558 -(137 + 394))) ;local v143;local v144;local v145;local v146;local v147;local v148;while true do if (((5 -2)==v142) or ((1134 + 1118)==(92 + 173))) then while true do if (((1934 -1090)<=(1737 + 930)) and (v143==(1 + (1 -0)))) then local v252=0 + 0 ;while true do if ((3395<((10147 -6125) -(277 + 116))) and (v252==1)) then v143=2 + 1 ;break;end if ((v252==(1956 -(1143 + 813))) or (((7921 -5156) + 1627)<=(4550 -(501 + 727)))) then for v314=1,v145 do v82[v146 + v314 ]=v147[v314];end v148=v147[1 + (0 -0) ];v252=1;end end end if ((v143==(1686 -(708 + 978))) or (4507<=(1238 + 218))) then local v253=716 -((781 -502) + (590 -(123 + 30))) ;while true do if ((371<(1226 -(543 + 302))) and (v253==0)) then v144=v84[3 -1 ];v145=v84[1953 -(638 + 1311) ];v253=2 -1 ;end if (((13917 -9442)>=(250 + 1464 + 1769)) and (v253==((2 -1) -0))) then v143=1;break;end end end if ((v143==(1262 -(484 + 184 + 591))) or (4262==(443 + 571))) then if (((1155 -679)<2814) and v148) then local v275=745 -(574 + 171) ;local v276;while true do if ((3150==(4310 -(146 + 1014))) and (v275==(0 + 0))) then v276=0 + (733 -(483 + 250)) ;while true do if (((15 + 328)<=(931 -425)) and (v276==(301 -(259 + 42)))) then v82[v146]=v148;v67=v84[2 + 1 ];break;end end break;end end else v67=v67 + (136 -(101 + 34)) ;end break;end if ((v143==(1 + 0)) or ((5699 -3069)>=3920)) then local v254=0;while true do if (((2231 -1513)<3604) and (v254==0)) then v146=v144 + 2 ;v147={v82[v144](v82[v144 + (1 -0) ],v82[v146])};v254=1;end if ((v254==(1 -(1366 -(665 + 701)))) or ((581 + 144)>=(7085 -2128))) then v143=1687 -(33 + 1652) ;break;end end end end break;end if ((v142==(1571 -(1371 + 199))) or ((1368 + 3306)<(1702 -(818 + (2454 -(1326 + 622)))))) then v145=nil;v146=nil;v142=1 + 1 ;end if (((4170 -2179)>(2461 -(3053 -(1494 + 328)))) and (v142==0)) then v143=524 -(146 + 378) ;v144=nil;v142=1 -(0 -0) ;end if ((v142==2) or ((4411 -(75 + 9))<=(6617 -4061))) then v147=nil;v148=nil;v142=3 + 0 ;end end else local v149=0;local v150;local v151;local v152;while true do if (((6194 -4149)<(3933 -(13 + (625 -367)))) and (v149==(1 + 0))) then v152=nil;while true do if (((527 + 11)<(3273 -(75 + 1176))) and (v150==(0 + 0))) then local v255=0 -0 ;while true do if ((v255==(1 -0)) or ((1480 + 1188)<(542 + 344))) then v150=4 -3 ;break;end if ((v255==(551 -(375 + 29 + 147))) or ((1951 + 350)<1721)) then v151=1435 -(634 + 801) ;v152=nil;v255=1 -0 ;end end end if (((2399 -(983 + 310))==(2434 -(53 + 1275))) and (v150==(1 -0))) then while true do if ((v151==(0 -0)) or (860>=(10282 -7753))) then v152=v84[2 -0 ];v82[v152](v13(v82,v152 + 1 ,v84[3 -0 ]));break;end end break;end end break;end if ((v149==((0 -0) -0)) or ((16863 -12238)<((7155 -1903) -3687))) then v150=0 -0 ;v151=nil;v149=1;end end end elseif (((753 + 149)<=(1691 + 1595)) and (v85<=(1998 -(1441 + 540)))) then local v153=0 + 0 ;local v154;local v155;local v156;local v157;local v158;local v159;while true do if (((299 + 1432)>(153 -41)) and (v153==(1 + (0 -0)))) then v156=nil;v157=nil;v153=318 -(126 + 190) ;end if ((v153==(6 -3)) or ((4917 -2257)>(3199 + 420))) then while true do if ((v154==(2 -0)) or ((4757 -3223)<=204)) then v159=nil;while true do if (((3880 -(270 + 186))>(8176 -6128)) and (v155==(0 + 0))) then local v298=0 + 0 ;while true do if ((v298==(0 -0)) or ((2054 -(599 + 516))<((2108 -(804 + 1157)) + 41))) then v156=v84[2];v157,v158=v79(v82[v156](v82[v156 + 1 + 0 ]));v298=470 -(443 + 26) ;end if ((v298==(177 -(46 + 130))) or ((6034 -(438 + 1533))<(10869 -7109))) then v155=1 + 0 + 0 ;break;end end end if ((v155==2) or ((3688 -(1117 + 649))<=(2386 -((4314 -2752) + 71)))) then for v317=v156,v68 do local v318=(0 -0) -0 ;local v319;while true do if (((74 + 1393)<=(1954 + 343 + 229)) and (v318==0)) then v319=0 + 0 ;while true do if (((957 + 2410)>=(2791 -(4 + 61))) and (v319==(0 -0))) then v159=v159 + (1 -0) ;v82[v317]=v157[v159];break;end end break;end end end break;end if ((v155==1) or ((1583 -(168 + 234))<848)) then local v299=0 + 0 ;local v300;while true do if (((1905 -977)<2160) and (v299==(0 -0))) then v300=0;while true do if ((0==v300) or (923<(2885 -2005))) then v68=(v158 + v156) -(1 + 0) ;v159=0 -0 ;v300=1950 -(721 + 1228) ;end if (((2459 + 903)<=((2151 -1588) + 3913)) and (v300==((2 -1) + (0 -0)))) then v155=2;break;end end break;end end end end break;end if ((v154==0) or ((330 -188)==3650)) then v155=0 -0 ;v156=nil;v154=1 + 0 ;end if ((1==v154) or ((4066 -(1441 + 21))>=(6258 -3254))) then local v256=(1418 -(775 + 643)) -0 ;while true do if (((5412 -(34 + 232 + 1062))==(1875 + 2209)) and (v256==(0 + 0))) then v157=nil;v158=nil;v256=(3 -2) -0 ;end if (((8420 -5325)<3717) and (v256==(251 -(244 + 6)))) then v154=2 -0 ;break;end end end end break;end if ((4942>(1024 -(379 + 140))) and (v153==(2 + 0))) then v158=nil;v159=nil;v153=(373 -(71 + 235)) -(13 + 51) ;end if ((v153==0) or (2640>(2389 + (1777 -580)))) then v154=1217 -(1053 + 164) ;v155=nil;v153=(1081 -(417 + 663)) + 0 ;end end elseif (((5638 -3770)<=(3817 -(58 + 409))) and (v85>(3 + 15))) then v82[v84[1626 -(420 + 507 + 697) ]]=v36[v84[3]];else local v194=1992 -(1318 + 674) ;local v195;local v196;local v197;local v198;while true do if ((v194==((2 -1) + 1)) or ((3753 -1712)==(5533 -(630 + 276)))) then while true do if (((7424 -4027)>(1508 -(452 + 652))) and (v195==(1 -(0 -0)))) then v198=0 + 0 ;for v301=v196,v84[4 -0 ] do local v302=(911 -(122 + 133)) -(100 + 556) ;local v303;local v304;while true do if (((331 + 423)<1671) and ((0 + 0)==v302)) then v303=0 + 0 ;v304=nil;v302=1403 -(323 + 1079) ;end if (((1 + 0)==v302) or ((9835 -6157)<=((4513 -1971) -1638))) then while true do if ((v303==(1900 -(278 + 1622))) or ((1951 + 349)==1786)) then v304=778 -(410 + 368) ;while true do if ((v304==(0 + (0 -0))) or ((2011 + 2392)<=(4600 -(958 + 218)))) then v198=v198 + (75 -(68 + 6)) ;v82[v301]=v197[v198];break;end end break;end end break;end end end break;end if ((v195==(1639 -(877 + 762))) or (4641<=(3455 -1240))) then local v277=0 -0 ;while true do if (((1472 -(1125 + 26))<=(1072 -(11 + 46))) and (0==v277)) then v196=v84[2 + 0 ];v197={v82[v196](v13(v82,v196 + (930 -(537 + 8 + 384)) ,v68))};v277=1;end if ((3953>=(3712 -(579 + 120))) and (v277==(889 -(99 + 789)))) then v195=846 -(75 + 770) ;break;end end end end break;end if ((v194==(209 -(101 + 107))) or ((6740 -4207)>=3712)) then v197=nil;v198=nil;v194=2;end if ((v194==(0 + 0)) or (((6617 -(890 + 180)) -(1185 + 436))<(7323 -3510))) then v195=0 + 0 ;v196=nil;v194=1 + 0 + 0 ;end end end elseif ((v85<=29) or ((452 + (7671 -4754))>=(12949 -8478))) then if ((v85<=(9 + 15)) or ((125 + 114)>=(2526 -(113 + (163 -118))))) then if (((2415 -(58 + 176))<=(8102 -4523)) and (v85<=(40 -19))) then if (((822 -476)<(2319 -(33 + (2610 -(257 + 1663))))) and (v85==(39 -19))) then if ((v82[v84[(1014 -384) -(364 + 264) ]]~=v84[(58 -(22 + 34)) + 2 ]) or ((4 + 767)<(1237 -670))) then v67=v67 + 1 ;else v67=v84[1828 -((3818 -2465) + 472) ];end elseif (((5641 -1099)>(1310 + 1850)) and (v82[v84[302 -(107 + 193) ]]~=v82[v84[4]])) then v67=v67 + 1 ;else v67=v84[(1642 -(545 + 291)) -((1560 -(561 + 322)) + 126) ];end elseif (((11717 -8047)==(8605 -4935)) and (v85<=(70 -48))) then local v160=0 + (1108 -(949 + 159)) ;local v161;local v162;while true do if ((v160==(0 -0)) or (746>4768)) then v161=1560 -(1078 + 482) ;v162=nil;v160=(6 -2) -3 ;end if (((3992 + 199)>(3483 -(324 + 325 + 515))) and (v160==(228 -(203 + 24)))) then while true do if (((778 + 1043)<3111) and (v161==(1918 -(960 + 958)))) then v162=v84[1 + (1348 -(530 + 817)) ];v82[v162]=v82[v162](v82[v162 + (1 -(1455 -(1364 + 91))) ]);break;end end break;end end elseif ((v85>(29 -6)) or ((2197 -(754 + 487))<=80)) then for v229=v84[2],v84[159 -(69 + 87) ] do v82[v229]=nil;end else v82[v84[2]]=v82[v84[1 + 2 ]][v84[388 -(83 + 301) ]];end elseif (((175 + 1492)<=(4086 -(34 + 105))) and (v85<=26)) then if ((((1677 -685) -550)<(2180 + 22)) and (v85==(306 -((350 -(208 + 134)) + 273)))) then local v163=0;local v164;local v165;local v166;local v167;while true do if (((79 + 21)<(537 + 1683)) and (v163==(2 + 0))) then while true do if (((48 + 2379)<=(16215 -12890)) and (v164==0)) then local v259=0 -0 ;while true do if ((v259==(0 -0)) or ((4264 -(377 + 1499))>(9859 -6669))) then v165=0 + 0 ;v166=nil;v259=1;end if (((311 + 291)<(4000 -2114)) and (v259==(1 + 0))) then v164=1 + 0 ;break;end end end if (((3793 -2533)<=(20372 -15440)) and (v164==((2725 -2091) -(48 + 585)))) then v167=nil;while true do if (((3123 -2338)<=(600 + 2143)) and (v165==0)) then local v305=1649 -(1581 + 68) ;local v306;while true do if ((3952>=(761 + (3065 -(7 + 68)))) and (v305==(0 + (0 -0)))) then v306=0;while true do if ((v306==0) or ((4997 -1845)<(3089 -1957))) then local v359=0 + 0 + 0 ;while true do if (((5374 -(354 + 985))>(3419 -1510)) and ((1 + 0)==v359)) then v306=1;break;end if ((2176<=(4924 -(7 + 20))) and (v359==(1181 -(10 + 1171)))) then v166=v84[30 -(26 + 2) ];v167=v82[v166];v359=1 -0 ;end end end if (((448 -(43 + 37))<(4416 -(984 + 108 + 50))) and (v306==(1 + (1911 -(680 + 1231))))) then v165=3 -2 ;break;end end break;end end end if ((v165==((2 + 0) -1)) or ((5866 -3260)<(1240 -622))) then for v320=v166 + (98 -(34 + 63)) ,v84[369 -(114 + 252) ] do v7(v167,v82[v320]);end break;end end break;end end break;end if (((9118 -6046)>=(88 + 474)) and (v163==(3 -2))) then v166=nil;v167=nil;v163=1915 -(457 + 1456) ;end if ((v163==0) or ((3903 -(849 + 490))>=(5668 -(1394 + 75)))) then v164=(1625 -(162 + 955)) -(431 + 77) ;v165=nil;v163=3 -2 ;end end elseif (v82[v84[2 + 0 ]] or (1939==(7113 -4932))) then v67=v67 + (1801 -(1790 + 10)) ;else v67=v84[3 + 0 ];end elseif ((v85<=((1488 -(936 + 456)) -69)) or ((7923 -5097)<(577 + 618))) then if (((1320 -511)==(2163 -1354)) and (v82[v84[144 -(51 + 91) ]]==v82[v84[1085 -(274 + 807) ]])) then v67=v67 + 1 + 0 + 0 ;else v67=v84[3];end elseif ((v85==(87 -59)) or (2889<((1237 -(406 + 395)) + 1738))) then v82[v84[5 -3 ]]=v84[(2878 -1453) -(969 + 453) ]~=0 ;elseif (((4525 -(307 + 47))>=1981) and  not v82[v84[2]]) then v67=v67 + 1 ;else v67=v84[11 -8 ];end elseif ((v85<=34) or ((9064 -6144)==(3375 -(201 + 500)))) then if (((9911 -7040)<=(3960 -(165 + 585))) and (v85<=(1828 -(1741 + (127 -71))))) then if (((506 -210)==(85 + 211)) and (v85>(1539 -(1111 + 398)))) then v82[v84[2 + 0 ]][v84[3]]=v84[5 -1 ];else local v170=0;local v171;local v172;while true do if ((4143==(2683 + 1460)) and (v170==(974 -(102 + 871)))) then while true do if (((1047 + 944)==1991) and (v171==(0 + 0))) then v172=v84[2 + 0 ];v82[v172](v82[v172 + 1 + 0 + 0 ]);break;end end break;end if ((v170==(0 -0)) or ((448 -(42 + 12))>1068)) then v171=0;v172=nil;v170=1 -0 ;end end end elseif ((v85<=32) or ((3230 -(132 + 1299))<(1427 -(52 + 152)))) then local v173=(1188 + 150) -(396 + 942) ;local v174;local v175;while true do if (((3981 -(576 + 806))<=(4650 + 86)) and (v173==(506 -(365 + (1565 -(964 + 460)))))) then local v231=(699 -465) -(192 + 42) ;while true do if ((v231==(1005 -(10 + 995))) or ((4944 -2006)>=(5933 -(1306 + 497)))) then v174=0 + 0 ;v175=nil;v231=(875 + 992) -(275 + 1113 + 478) ;end if (((9446 -6528)<3055) and (v231==((1 -0) + 0))) then v173=1 -0 ;break;end end end if ((v173==(1 + 0)) or ((300 + (2983 -(4 + 1304)))<(608 + 332))) then while true do if (((4637 -(267 + 1262))<=(3186 + 576)) and (v174==(0 + 0))) then v175=v82[v84[1169 -(1036 + 129) ]];if ( not v175 or ((1286 -713)>((39706 -29466) -6344))) then v67=v67 + 1 + 0 ;else local v278=0 -0 ;local v279;while true do if ((v278==(1585 -(617 + 968))) or ((3055 -(3893 -(1380 + 70)))>(3651 + 814))) then v279=0 + 0 ;while true do if (((195 + 512 + 1101)==(427 + 405 + 976)) and (v279==0)) then v82[v84[1 + 1 ]]=v175;v67=v84[1735 -(484 + 1248) ];break;end end break;end end end break;end end break;end end elseif (((5447 -(1158 + 768))>=((1941 -(565 + 378)) + 2407)) and (v85==(17 + 16))) then v82[v84[6 -(8 -4) ]]=v37[v84[127 -(64 + 60) ]];else local v208=0 -0 ;local v209;local v210;local v211;local v212;local v213;while true do if (((566 + 137)<=(3504 -(354 + 992))) and (v208==(0 + 0))) then v209=994 -(300 + 694) ;v210=nil;v208=1 -0 ;end if (((4765 -(222 + 665))>2029) and (v208==(2 -0))) then v213=nil;while true do if (((137 -89)<(5855 -4065)) and (v209==2)) then while true do if (((14163 -(55629 -44463))>(1513 -(209 + 167))) and (v210==((3364 -2058) -(1122 + 184)))) then local v331=0 -0 ;local v332;while true do if (((641 -(520 + 121))==v331) or ((2138 -(1393 + 509))==(2469 + 1748))) then v332=(4626 -2767) -(1406 + 453) ;while true do if ((v332==(1513 -(1150 + 363))) or ((3079 + 1672)>=(5282 -(451 + 59)))) then v211=v84[2];v212=v82[v211];v332=1965 -(1252 + (1181 -469)) ;end if ((v332==1) or (((6534 -3874) + 1573)==(3247 -(356 + 671)))) then v210=1;break;end end break;end end end if ((v210==1) or ((4214 -2058)>=(862 + 2993))) then v213=v84[(319 -(206 + 111)) + 1 ];for v337=928 -(14 + 913) ,v213 do v212[v337]=v82[v211 + v337 ];end break;end end break;end if ((v209==(1 + 0)) or ((395 + 3899)<=537)) then v212=nil;v213=nil;v209=2;end if ((v209==0) or (4224<=(3128 -(291 + 615)))) then local v280=1448 -(1041 + 407) ;while true do if ((v280==(0 -0)) or (2001<=(762 -(494 + 108)))) then v210=859 -(674 + 185) ;v211=nil;v280=1 + 0 ;end if ((v280==(1606 -(891 + 714))) or ((6057 -(1044 + 847))<=(2426 -774))) then v209=2 -1 ;break;end end end end break;end if ((v208==(3 -2)) or ((737 -471)==(149 + (3766 -1924)))) then v211=nil;v212=nil;v208=1876 -(123 + 1751) ;end end end elseif (((2274 + 141)<((4382 + 1294) -(1406 + 215))) and (v85<=(7 + 30))) then if (((104 -72)<2345) and (v85<=(124 -89))) then do return v82[v84[2 + 0 ]];end elseif (((746 + 459)<=(21326 -17046)) and (v85==36)) then do return;end else v82[v84[2]]=v82[v84[8 -5 ]] + v82[v84[1873 -(781 + 1088) ]] ;end elseif ((v85<=(125 -87)) or ((3807 -2712)==(369 -193))) then v82[v84[1 + 1 ]]={};elseif ((4873>=(32 + 5 + (3520 -(91 + 126)))) and (v85>(500 -(433 + 28)))) then local v215=67 -(15 + 52) ;local v216;local v217;while true do if (((1938 -(1472 + 466))==v215) or ((5374 -1284)<=(3311 -(701 + 452)))) then local v241=503 -(430 + 73) ;while true do if (((15316 -(302 + 10544))==(9577 -(668 + 4439))) and ((558 -(257 + 301))==v241)) then v216=v84[2 + 0 ];v217=v82[v84[486 -(27 + 456) ]];v241=1;end if ((v241==1) or ((348 + 1228)>2631)) then v215=1;break;end end end if ((v215==(1468 -((1507 -(412 + 1070)) + (3596 -2154)))) or ((178 + 1080)==(2741 + 1318))) then v82[v216 + 1 + 0 ]=v217;v82[v216]=v217[v84[1035 -(890 + 141) ]];break;end end else local v218=0;local v219;local v220;local v221;while true do if ((v218==(1 + 0)) or ((3440 -(499 + 835))<(2112 -(351 + 1337)))) then v221=nil;while true do if (((10316 -8153)>(1170 + (1376 -(166 + 915)))) and ((1466 -(743 + 722))==v219)) then for v307=v220 + (1 -0) ,v84[4] do v221=v221   .. v82[v307] ;end v82[v84[2]]=v221;break;end if (((7588 -5579)>=((2248 -1145) -(478 + 83))) and (v219==((1964 -(1219 + 745)) -0))) then local v284=0;while true do if (((759 + 106)==(1295 -(62 + 368))) and (v284==((1327 -616) -((936 -437) + 211)))) then v219=1;break;end if (((753 + 2601)==(3611 -(68 + 11 + 178))) and (v284==(1392 -(603 + 789)))) then v220=v84[293 -(136 + 154) ];v221=v82[v220];v284=1 + 0 ;end end end end break;end if (((2851 -(1119 + (911 -535)))==(3169 -1813)) and (v218==(0 + 0))) then v219=0 + 0 ;v220=nil;v218=1;end end end v67=v67 + (2 -1) ;break;end end break;end end end end A,B=v32(v11(v71));if  not A[1] then local v93=0;local v94;while true do if (v93==0) then v94=v35[4][v67] or "?" ;error("Script error at ["   .. v94   .. "]:"   .. A[2] );break;end end else return v13(A,2,B);end end;end return v34(v33(),{},v17)(...);end vv9(),...);end