do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (1==v18) then v21=nil;v21=function(v31,v32,v33)if v33 then local v69=(v31/(2^(v32-(1 + 0))))%((1 + 1)^(((v33-(580 -((738 -332) + 173))) -(v32-(1 + 0))) + (1992 -(1139 + 817 + 35)))) ;return v69-(v69%(3 -2)) ;else local v70=(464 -(252 + (336 -126)))^(v32-1) ;return (((v31%(v70 + v70))>=v70) and 1) or (1471 -(810 + 661)) ;end end;v22=nil;v18=2;end if (6==v18) then v29=nil;v29=function()local v39=0 -0 ;local v40;local v41;local v42;local v43;local v44;local v45;local v46;while true do if (v39==(2 + 1)) then v46=nil;while true do if (v40~=(0 + 0)) then else local v85=0 -0 ;local v86;while true do if (v85==(0 + 0)) then v86=631 -(612 + 19) ;while true do if ((0 -0)==v86) then v41={};v42={};v86=1 + 0 ;end if (v86==(538 -(228 + 308))) then v40=1 -0 ;break;end if (v86==(1 + 0)) then local v123=0 + 0 ;while true do if (v123==(44 -(38 + 5))) then v86=7 -5 ;break;end if (v123==0) then v43={};v44={v41,v42,nil,v43};v123=749 -(609 + 139) ;end end end end break;end end end if ((4 -2)~=v40) then else local v87=0;while true do if (v87==(0 + 0)) then for v109=2 -1 ,v24() do local v110=0 -0 ;local v111;local v112;local v113;local v114;while true do if (v110==1) then v113=nil;v114=nil;v110=2 -0 ;end if ((2 -0)~=v110) then else while true do if (v111~=(365 -(232 + 133))) then else v112=0 -0 ;v113=nil;v111=1 + 0 ;end if (v111~=(2 -1)) then else v114=nil;while true do if (v112==(1459 -(8 + 1451))) then local v127=0;while true do if (v127~=(1607 -(95 + 1511))) then else v112=1;break;end if (v127~=(0 + 0)) then else v113=0 + 0 ;v114=nil;v127=1 + 0 ;end end end if (v112==(1182 -(1032 + 149))) then while true do if (v113==0) then v114=v22();if (v21(v114,1327 -(161 + 1165) ,1)==(0 -0)) then local v128=452 -(185 + 267) ;local v129;local v130;local v131;local v132;local v133;while true do if ((0 -0)~=v128) then else local v177=1754 -(1103 + 651) ;while true do if (v177==0) then v129=725 -(425 + 300) ;v130=nil;v177=1 + 0 ;end if (v177~=1) then else v128=1;break;end end end if ((1271 -(1138 + 131))~=v128) then else v133=nil;while true do if (v129~=(1992 -(547 + 1445))) then else local v245=1149 -(697 + 452) ;while true do if (v245~=(799 -(42 + 756))) then else v129=1;break;end if (v245==(0 -0)) then v130=0 -0 ;v131=nil;v245=1;end end end if ((1 + 0)==v129) then v132=nil;v133=nil;v129=1842 -(1737 + 103) ;end if (v129~=2) then else while true do if (v130==(0 + 0)) then local v275=1607 -(42 + 1565) ;local v276;while true do if (v275==(844 -(659 + 185))) then v276=1768 -(149 + 1619) ;while true do if (v276==(2 -1)) then v130=416 -(265 + 150) ;break;end if (v276==0) then local v331=0;local v332;while true do if (v331==(0 + 0)) then v332=0 + 0 ;while true do if ((0 -0)~=v332) then else local v375=1903 -(1263 + 640) ;while true do if (0~=v375) then else v131=v21(v114,2,699 -(453 + 243) );v132=v21(v114,3 + 1 ,6);v375=1 + 0 ;end if (v375~=(1 + 0)) then else v332=1;break;end end end if (v332==(1 + 0)) then v276=1 + 0 ;break;end end break;end end end end break;end end end if (v130==(1 + 0)) then local v277=0 -0 ;local v278;while true do if (0==v277) then v278=0;while true do if (v278==(1 -0)) then v130=2;break;end if (v278==0) then local v333=0;while true do if (v333~=(1812 -(1548 + 264))) then else v133={v23(),v23(),nil,nil};if (v131==(0 -0)) then local v367=0 + 0 ;local v368;while true do if (v367==0) then v368=1693 -(12 + 1681) ;while true do if (v368==(0 + 0)) then v133[12 -9 ]=v23();v133[658 -(409 + 245) ]=v23();break;end end break;end end elseif (v131==(1 + 0)) then v133[1 + 2 ]=v24();elseif (v131==2) then v133[2 + 1 ]=v24() -((9 -7)^(7 + 9)) ;elseif (v131~=(3 + 0)) then else local v387=1389 -(1089 + 300) ;while true do if (v387==0) then v133[4 -1 ]=v24() -(2^(1618 -(427 + 1175))) ;v133[2 + 2 ]=v23();break;end end end v333=1 + 0 ;end if ((967 -(71 + 895))==v333) then v278=1 + 0 ;break;end end end end break;end end end if ((373 -(360 + 11))~=v130) then else local v279=0 -0 ;local v280;while true do if ((1063 -(440 + 623))~=v279) then else v280=0;while true do if (v280==(2 -1)) then v130=10 -7 ;break;end if (v280==(0 + 0)) then local v334=0 -0 ;while true do if (v334==(1 + 0)) then v280=1 + 0 ;break;end if (v334==(0 + 0)) then if (v21(v132,3 -2 ,1)==1) then v133[4 -2 ]=v46[v133[1583 -(1232 + 349) ]];end if (v21(v132,1 + 1 ,2 + 0 )==(1 -0)) then v133[3]=v46[v133[7 -4 ]];end v334=1 + 0 ;end end end end break;end end end if (v130==(8 -5)) then if (v21(v132,3 + 0 ,1 + 2 )==(1073 -(908 + 164))) then v133[4]=v46[v133[4]];end v41[v109]=v133;break;end end break;end end break;end if (v128==(1 -0)) then v131=nil;v132=nil;v128=5 -3 ;end end end break;end end break;end end break;end end break;end if (v110==(1660 -(1234 + 426))) then v111=0 -0 ;v112=nil;v110=1 -0 ;end end end for v115=1018 -(162 + 855) ,v24() do v42[v115-(1 -0) ]=v29();end v87=1 + 0 ;end if (v87==(1 + 0)) then for v117=601 -(145 + 455) ,v24() do v43[v117]=v24();end return v44;end end end if (v40==(512 -(464 + 47))) then v45=v24();v46={};for v89=1,v45 do local v90=1319 -(1265 + 54) ;local v91;local v92;local v93;while true do if ((1 + 0)==v90) then v93=nil;while true do if (v91~=(0 + 0)) then else v92=v22();v93=nil;v91=1 + 0 ;end if (v91~=(1 + 0)) then else if (v92==(1 + 0)) then v93=v22()~=(0 -0) ;elseif (v92==(1753 -(1130 + 621))) then v93=v25();elseif (v92==(1 + 2)) then v93=v26();end v46[v89]=v93;break;end end break;end if (v90~=0) then else v91=0 + 0 ;v92=nil;v90=771 -(247 + 523) ;end end end v44[3 + 0 ]=v22();v40=2;end end break;end if ((3 -1)==v39) then v44=nil;v45=nil;v39=1591 -(1380 + 208) ;end if (v39==(1 -0)) then local v73=464 -(217 + 247) ;while true do if ((0 -0)==v73) then v42=nil;v43=nil;v73=1 -0 ;end if (v73==(1611 -(1419 + 191))) then v39=2;break;end end end if (v39~=(0 + 0)) then else local v74=1433 -(817 + 616) ;while true do if ((1518 -(961 + 557))==v74) then v40=0 + 0 ;v41=nil;v74=2 -1 ;end if (v74==1) then v39=4 -3 ;break;end end end end end;v30=nil;v18=7;end if (v18==0) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v34)if (v1(v34,2)==79) then v20=v0(v3(v34,1,1));return "";else local v71=0;local v72;while true do if (0==v71) then v72=v2(v0(v34,16));if v20 then local v94=v5(v72,v20);v20=nil;return v94;else return v72;end break;end end end end);v18=1;end if (v18==4) then v25=function()local v47=v24();local v48=v24();local v49=1 + 0 ;local v50=(v21(v48,653 -(70 + 582) ,9 + 11 ) * ((962 -(838 + 122))^32)) + v47 ;local v51=v21(v48,5 + 16 ,13 + 18 );local v52=((v21(v48,21 + 11 )==(1439 -((3639 -2683) + 224 + 258))) and  -(1816 -(54 + (3652 -(1107 + 784))))) or 1 ;if (v51==(956 -(575 + 381))) then if (v50==(0 -0)) then return v52 * (0 -0) ;else local v78=0 + 0 ;while true do if (v78==0) then v51=(4 -3) -(726 -(492 + 234)) ;v49=77 -(13 + 64) ;break;end end end elseif (v51==2047) then return ((v50==(1210 -(443 + 767))) and (v52 * (1/0))) or (v52 * NaN) ;end return v8(v52,v51-(834 + 189) ) * (v49 + (v50/((1193 -(876 + (855 -540)))^(1038 -(546 + 409 + 31))))) ;end;v26=nil;v26=function(v35)local v53;if  not v35 then v35=v24();if (v35==(0 + 0)) then return "";end end v53=v3(v16,v19,(v19 + v35) -(1268 -(1012 + 255)) );v19=v19 + v35 ;local v54={};for v67=465 -(446 + 18) , #v53 do v54[v67]=v2(v1(v3(v53,v67,v67)));end return v6(v54);end;v18=5;end if (v18==2) then v22=function()local v55=v1(v16,v19,v19);v19=v19 + 1 ;return v55;end;v23=nil;v23=function()local v56=0 + 0 ;local v57;local v58;while true do if ((1970 -(1148 + 822))==v56) then v57,v58=v1(v16,v19,v19 + (3 -1) );v19=v19 + 1 + 0 + 1 ;v56=1 + 0 ;end if (v56==(1 -0)) then return (v58 * (1599 -(540 + 803))) + v57 ;end end end;v18=3;end if (7==v18) then v30=function(v36,v37,v38)local v59=0;local v60;local v61;local v62;while true do if (v59==0) then v60=v36[1];v61=v36[2];v59=1;end if (v59==1) then v62=v36[3];return function(...)local v79=0;local v80;local v81;local v82;local v83;local v84;while true do if (0==v79) then v80=1;v81= -1;v79=1;end if (2==v79) then v84=nil;v84=function()local v95=v60;local v96=v61;local v97=v62;local v98=v28;local v99={};local v100={};local v101={};for v105=782 -(567 + 215) ,v83 do if ((v105>=v97) or ((4552 -(719 + 761))<=(4268 -1293))) then v99[v105-v97 ]=v82[v105 + 1 + 0 ];else v101[v105]=v82[v105 + (1 -0) + 0 ];end end local v102=(v83-v97) + (3 -2) ;local v103;local v104;while true do local v106=0 -0 ;local v107;while true do if ((v106==(0 + 0)) or ((1021 -718)>=((1419 -(72 + 125)) + 363))) then v107=(548 -(113 + 435)) + 0 ;while true do if (((0 -0)==v107) or ((34 + 53)==(4055 -(493 + 180 + 117)))) then v103=v95[v80];v104=v103[2 -1 ];v107=1522 -(1312 + 209) ;end if (((2717 -(975 + 475))<(3482 -(130 + 1054))) and (v107==(1 + 0))) then if ((v104<=(1813 -(1539 + 255))) or (((2816 + 2877) -(1103 + 62))>=(580 + 4333))) then if (((2640 + 1095)>(1690 + 1940)) and (v104<=((6 + 19) -16))) then if ((v104<=((3 + 6) -5)) or ((494 + (8059 -5845))<=(1023 + 22))) then if ((v104<=(3 -2)) or ((5636 -4281)>=(418 + 2621))) then if ((v104==(419 -(413 + 6))) or ((4004 -((870 -(24 + 829)) + 1475))<=(2193 + 0))) then local v134=0 + 0 ;local v135;local v136;while true do if ((v134==(1676 -(96 + 1579))) or ((14 + 1)>(5412 -(121 + 1770)))) then v101[v135 + (1 -0) ]=v136;v101[v135]=v136[v103[11 -7 ]];break;end if ((v134==(0 -0)) or ((3791 -(121 + 179))<=2385)) then v135=v103[163 -(44 + 117) ];v136=v101[v103[7 -4 ]];v134=1 + 0 ;end end else local v137=0 -0 ;local v138;local v139;local v140;while true do if ((v137==(0 + 0 + 0)) or ((2508 -(200 + (1025 -(9 + 4))))<=(1050 + (158 -41)))) then v138=0 + 0 ;v139=nil;v137=171 -(79 + 91) ;end if (((12394 -7797)>=(288 + (2161 -(767 + 355)))) and (v137==(341 -(321 + 19)))) then v140=nil;while true do if ((1432<(7316 -4481)) and (v138==(1625 -(1108 + 243 + 274)))) then v139=v103[1698 -(620 + 1076) ];v140={};v138=1 + 0 ;end if (((6135 -(164 + 554 + 572))>(2385 -1444)) and (v138==((2 -1) + (0 -0)))) then for v268=1 + 0 , #v100 do local v269=(671 + 128) -(194 + 605) ;local v270;local v271;while true do if ((v269==0) or (((2633 -(282 + 138)) -(647 + 1297))>=(2871 -1369))) then v270=0 + 0 ;v271=nil;v269=1 + 0 ;end if ((((113 + 2010) -1592)<=(2439 -(1075 + (792 -194)))) and (v269==(1 + (0 -0)))) then while true do if (((94 + 0)<(2606 -(43 + 1512))) and (v270==(1425 -(255 + 1170)))) then v271=v100[v268];for v335=0 -0 , #v271 do local v336=0 -0 ;local v337;local v338;local v339;local v340;local v341;while true do if ((v336==(2 -1)) or ((468 + 3890)==(11950 -9518))) then v339=nil;v340=nil;v336=3 -1 ;end if (((5144 -3018)>=(46 + 486)) and (v336==(2 + 0))) then v341=nil;while true do if (((1454 -(136 + 38))==(1152 + 128)) and ((0 + 0)==v337)) then local v376=0 + 0 ;while true do if (((494 + 9)<((4922 -3171) -(114 + 13))) and (v376==(2 -1))) then v337=218 -((205 -(34 + 27)) + (268 -195)) ;break;end if ((v376==(0 -0)) or ((14187 -(9706 -(108 + 393)))<((6194 + 580) -2794))) then v338=0 + 0 ;v339=nil;v376=606 -(87 + 518) ;end end end if ((v337==((618 -(492 + 124)) -0)) or (((2241 -(253 + 57)) -(2217 -(681 + 1165)))>(3794 + 817))) then while true do if ((v338==(77 -(32 + 27 + 17))) or ((1352 + 46)<=(932 -448))) then v341=v339[3 -1 ];if (((1599 -315)<=(1322 + 673)) and (v340==v101) and (v341>=v139)) then local v388=0 -(657 -(375 + 282)) ;local v389;while true do if ((v388==(0 -0)) or ((9 + 7)>=(8003 -5811))) then v389=1131 -((2034 -988) + 85) ;while true do if (((1073 -((1128 -(760 + 124)) + 260))<=(4605 -(1115 + 493))) and ((0 -(919 -(769 + 150)))==v389)) then v140[v341]=v340[v341];v339[312 -((1627 -(71 + 1460)) + 215) ]=v140;break;end end break;end end end break;end if (((2849 + 1202)>(655 + (3920 -(264 + 1047)))) and (v338==(0 + 0))) then local v382=0 + (1566 -(438 + 1128)) ;local v383;while true do if ((v382==(0 + 0)) or ((468 + 812)>=((4158 -(1032 + 217)) + 809))) then v383=(2974 -1969) -(838 + 167) ;while true do if (((439 + 1294)>=(1489 -(232 + 753))) and (v383==(3 -2))) then v338=2 -1 ;break;end if (((1022 + 1169)>((1663 + 847) -793)) and (((0 + 0) -0)==v383)) then v339=v271[v335];v340=v339[2 -1 ];v383=450 -(144 + 305) ;end end break;end end end end break;end if ((v337==(1 + 0)) or ((249 + 4120)<=(4538 -(1529 + 315)))) then local v377=(1584 -(671 + 913)) -0 ;while true do if ((v377==((2516 -(412 + 1397)) -(381 + 325))) or (((5178 + 1170) -4523)==(608 -(11 + 16)))) then v337=(1216 -(288 + 926)) + 0 ;break;end if (((15302 -11770)==(1798 + 1734)) and (v377==((107 -(58 + 49)) -(1459 -(536 + 923))))) then v340=nil;v341=nil;v377=1 + 0 ;end end end end break;end if ((v336==(0 + 0)) or ((1150 + 340)==(2299 -(216 + 203)))) then v337=0 + (0 -0) ;v338=nil;v336=1 -0 ;end end end break;end end break;end end end break;end end break;end end end elseif ((3214==(7151 -3937)) and (v104<=(2 + 0))) then if (((4926 -(968 + 618))==(1739 + 1601)) and (v101[v103[(500 -(57 + 434)) -7 ]]==v101[v103[1 + 2 + 1 ]])) then v80=v80 + (3 -2) ;else v80=v103[3 + 0 ];end elseif (((19558 -15524)>=(3854 -1805)) and (v104==(1 + 2))) then local v179=463 -(52 + (662 -251)) ;local v180;local v181;local v182;local v183;local v184;while true do if (((4142 -(480 + 528))<(3881 -(229 + 94))) and (v179==(1947 -(483 + 1463)))) then v182=nil;v183=nil;v179=2 + 0 ;end if ((((1192 + 5338) -(484 + 1255))>=(1868 -(132 + 522))) and ((0 + 0)==v179)) then v180=0 -0 ;v181=nil;v179=1 + 0 ;end if (((10168 -7941)>=(669 -374)) and (v179==(2 + 0))) then v184=nil;while true do if ((v180==(0 + (1613 -(635 + 978)))) or ((3130 -(923 + 404))<=(374 + 35))) then local v282=0;while true do if (((6996 -2643)>=(8537 -5369)) and ((1 + 0)==v282)) then v180=579 -(183 + (1474 -1079)) ;break;end if (((592 -(401 + 191))==v282) or ((444 + 460)>=3135)) then v181=0 + (1727 -(475 + 1252)) ;v182=nil;v282=1 + 0 ;end end end if ((v180==((9 -7) -1)) or ((4132 -(1515 + 216))<(1304 -855))) then local v283=0 + 0 ;while true do if ((v283==(484 -(365 + 119))) or ((5895 -(667 + 329))<(1051 -((1791 -(1333 + 252)) + 566)))) then v183=nil;v184=nil;v283=1 + 0 ;end if (((1262 -(147 + 556))<(4657 -(65 + 14 + 18))) and ((800 -((405 -290) + 684))==v283)) then v180=5 -3 ;break;end end end if ((v180==(425 -(216 + (707 -500)))) or ((4564 + 257)<(355 + 1580))) then while true do if ((((2395 -(190 + 45)) + 551)==(4804 -2093)) and (v181==(494 -(170 + 323)))) then v184=0 + 0 ;for v316=v182,v103[(727 -(550 + 163)) -10 ] do local v317=0 + 0 ;local v318;while true do if ((((835 + 716) -(805 + 746))==v317) or ((9743 -7017)>=(5382 -(455 + 788)))) then v318=1082 -(74 + 1008) ;while true do if (((15396 -(29469 -17732))==3659) and (v318==(1428 -(1406 + 22)))) then v184=v184 + (1 -0) ;v101[v316]=v183[v184];break;end end break;end end end break;end if ((v181==(0 + 0 + 0)) or ((1431 + 3113)<((2207 -(476 + 569)) + 20))) then local v305=122 -(95 + 27) ;local v306;while true do if (((1720 + (3365 -1837))==(9865 -6617)) and (v305==((2320 -(716 + 883)) -(462 + 259)))) then v306=0 + 0 ;while true do if ((v306==(205 -(27 + 178))) or ((473 + 2207)<(2792 -(303 + 45)))) then local v354=0 + 0 ;while true do if (((9685 -6528)>=1821) and (v354==0)) then v182=v103[844 -((2020 -1489) + 311) ];v183={v101[v182](v13(v101,v182 + (1103 -(467 + (3083 -2448))) ,v81))};v354=1754 -(252 + 1501) ;end if (((2685 -1171)<=(4347 -(1125 + 490))) and (v354==(691 -(219 + 471)))) then v306=1581 -(612 + 968) ;break;end end end if (((2516 -(409 + 311))>(4181 -2504)) and (v306==1)) then v181=1 + 0 ;break;end end break;end end end end break;end end break;end end else for v232=v103[1705 -(1036 + 667) ],v103[4 -1 ] do v101[v232]=nil;end end elseif (((2679 -(191 + 21))<=(1602 + 1762)) and (v104<=((1245 -(135 + 1108)) + 4))) then if (((730 -193)<(1737 + 2406)) and (v104==(3 + 2))) then local v141=0;local v142;local v143;while true do if (((4515 -(8 + 3))>=(4194 -(6 + 10))) and (v141==(0 + 0))) then v142=0 + 0 ;v143=nil;v141=784 -(14 + 769) ;end if (((4961 -(124 + 556 + 406))>=(3101 -(48 + 119))) and (v141==(1 + 0))) then while true do if ((v142==(1245 -((1343 -(836 + 447)) + 1185))) or (((8848 -6469) -(1 + 82 + 77))>(4328 -1784))) then v143=v103[2 + 0 ];v101[v143]=v101[v143]();break;end end break;end end else do return;end end elseif (((10749 -8514)==((4590 -2860) + 505)) and (v104<=((11 -6) + 2))) then if ((v103[848 -(219 + 627) ]==v101[v103[9 -(8 -3) ]]) or (((4993 -1669) -(342 + 632))<=(5186 -3352))) then v80=v80 + 1 + 0 ;else v80=v103[2 + 1 ];end elseif ((v104==(1273 -(856 + 409))) or ((4834 -(151 + 1526))==(11738 -(9444 -(283 + 64))))) then local v186=0 + 0 ;local v187;local v188;local v189;local v190;while true do if (((492 + 1420)<((18885 -14166) -(392 + 197))) and (v186==(0 + 0))) then v187=0 + 0 ;v188=nil;v186=3 -2 ;end if (((2333 -(107 + 1865))<(5491 -(1180 + 798))) and (v186==(1 + 0))) then v189=nil;v190=nil;v186=265 -(7 + 237 + 19) ;end if ((1475>=(93 -52)) and (v186==((4 + 1) -3))) then while true do if (((307 + 435)<(16681 -(6398 + 5471))) and (v187==(9 -7))) then for v294=(1504 -(270 + 1233)) -0 ,v103[1 + 3 ] do local v295=0 -0 ;local v296;local v297;while true do if ((v295==(1 -0)) or ((5342 -2895)>=(4946 -(935 + 107)))) then while true do if ((v296==(104 -(93 + 11))) or ((1551 -(46 + 19))<=((2690 -1921) + 242))) then v80=v80 + (1 -0) ;v297=v95[v80];v296=1783 -(54 + 1728) ;end if (((388 + 580)==(2224 -1256)) and (v296==(564 -(405 + 158)))) then if (((1270 -909)<(960 -((1591 -(1028 + 545)) + 410))) and (v297[(442 + 522) -(776 + 187) ]==(2 + 27))) then v190[v294-((2038 -(12 + 52)) -(1054 + 919)) ]={v101,v297[4 -1 ]};else v190[v294-(1 + 0) ]={v37,v297[(4 + 0) -1 ]};end v100[ #v100 + 1 + (0 -0) ]=v190;break;end end break;end if (((8482 -5787)>=(850 -421)) and (v295==(0 -0))) then v296=0 -0 ;v297=nil;v295=1619 -(986 + 632) ;end end end v101[v103[3 -1 ]]=v30(v188,v189,v38);break;end if (((300 + 487)>(68 + 19)) and (v187==(0 + 0))) then v188=v96[v103[2 + 1 ]];v189=nil;v187=95 -(93 + 1) ;end if ((v187==(1 -0)) or ((2959 -(1150 + 742))>(461 + 3998))) then local v286=0;while true do if ((v286==(0 + 0)) or ((987 + 2127)<2323)) then v190={};v189=v10({},{__index=function(v307,v308)local v319=(341 -(166 + 175)) + 0 ;local v320;local v321;while true do if ((v319==(0 + 0)) or ((28 + 2328)<284)) then local v348=0;while true do if (((551 -157)<=(5978 -2564)) and (v348==(2 -1))) then v319=4 -3 ;break;end if ((v348==(1277 -(1146 + 131))) or ((1221 + 1165)==(3760 -(153 + 108)))) then v320=0 + 0 ;v321=nil;v348=1;end end end if (((10550 -7627)>((18580 -14395) -3146)) and ((1 + 0)==v319)) then while true do if ((v320==(0 -0)) or ((3198 + (2659 -1830))==(5749 -3052))) then local v362=1628 -(1128 + 500) ;local v363;while true do if (((5739 -1594)>(1578 + 917)) and (v362==(0 + 0))) then v363=1509 -(312 + 1197) ;while true do if (((6731 -5149)<(6332 -(1290 + 181))) and (v363==(696 -(671 + 25)))) then local v384=(0 + 0) -0 ;while true do if ((v384==(778 -(692 + 86))) or ((10264 -6802)<=(983 + 1798))) then v321=v190[v308];return v321[1235 -(647 + 587) ][v321[6 -4 ]];end end end end break;end end end end break;end end end,__newindex=function(v307,v308,v309)local v322=197 -(5 + 192) ;local v323;while true do if ((v322==(803 -(279 + 524))) or (947<=(2483 -(181 + 1375)))) then v323=v190[v308];v323[598 -(143 + 91 + 363) ][v323[3 -1 ]]=v309;break;end end end});v286=581 -(348 + 232) ;end if ((v286==(733 -(29 + 703))) or ((4991 -(375 + 848))<(1474 + 2208))) then v187=1 + 1 ;break;end end end end break;end end else local v191=0 -(1542 -(16 + 1526)) ;local v192;local v193;local v194;while true do if (((4430 + 35)<(8819 -3869)) and (v191==(958 -(105 + 853)))) then v192=307 -(17 + 290) ;v193=nil;v191=4 -3 ;end if ((v191==(1 -0)) or ((1146 + 1814)>=(4987 -(1005 + 812)))) then v194=nil;while true do if ((v192==(3 -2)) or ((3622 -1646)>(16953 -12690))) then while true do if (((6653 -(1107 + 751))>(1697 + 1322)) and (v193==(0 + 0))) then v194=v101[v103[(26 -18) -4 ]];if ( not v194 or (2434==(3469 -(754 + 39)))) then v80=v80 + (1 -0) ;else local v326=(216 -160) -(14 + 42) ;local v327;while true do if ((v326==(646 -(565 + (132 -51)))) or ((3365 -((6119 -4531) + 298))<=(1775 -(305 + 1121)))) then v327=0 + (912 -(310 + 602)) ;while true do if ((v327==(1654 -(617 + 1037))) or ((1214 + 1394)==(2731 -(365 + (1882 -(198 + 897)))))) then v101[v103[1938 -(758 + 1178) ]]=v194;v80=v103[1898 -(606 + 1289) ];break;end end break;end end end break;end end break;end if ((3725==(5872 -2147)) and ((351 -(23 + 328))==v192)) then local v287=0;while true do if (((794 + 1010)<(8194 -4041)) and (v287==(2 -1))) then v192=3 -2 ;break;end if ((v287==(1054 -(379 + 675))) or ((3274 -(503 + 89))==(4343 -((3370 -2419) + 566)))) then v193=0 + 0 ;v194=nil;v287=1 + 0 ;end end end end break;end end end elseif ((v104<=(691 -((1863 -1200) + 14))) or ((5194 -(227 + 453))<((302 -167) + 284))) then if ((v104<=(39 -(10 + 18))) or ((1209 + 788)<(3388 -(767 + (3388 -2361))))) then if (((1552 + 1588)==(6916 -3776)) and (v104==(36 -26))) then local v144=0 + 0 ;local v145;while true do if ((v144==(1147 -(866 + 281))) or ((2664 + 1024)<=(5345 -(853 + 1078)))) then v145=v103[(449 + 345) -(575 + 25 + 192) ];v101[v145](v101[v145 + (419 -(224 + 194)) ]);break;end end else v101[v103[1055 -(574 + 479) ]]=v38[v103[6 -3 ]];end elseif (((2895 -(1538 + 227))>=((94 -(49 + 22)) + 100)) and (v104<=((506 -283) -(185 + 26)))) then v80=v103[1662 -(906 + 753) ];elseif ((v104>(46 -33)) or ((1681 -312)>(13565 -8661))) then if (((1635 -1080)<(5544 -(881 + 247))) and  not v101[v103[2]]) then v80=v80 + (191 -(19 + 77 + 94)) ;else v80=v103[(11 -5) -3 ];end else v101[v103[1346 -(1187 + 157) ]]={};end elseif ((v104<=(6 + 10)) or ((1062 + 201 + 3380)<(7626 -5924))) then if ((v104>(12 + 3)) or ((6974 -4343)<(925 + (354 -(10 + 259))))) then do return v101[v103[6 -4 ]];end else v101[v103[2 + 0 ]]=v101[v103[(789 + 1024) -(1709 + 101) ]] + v101[v103[7 -3 ]] ;end elseif ((v104<=((5 + 18) -6)) or ((732 + (114 -77))==((3530 -(828 + 193)) -1490))) then local v150=0 -0 ;local v151;while true do if ((v150==(169 -(60 + 109))) or ((4521 -(65 + 97))<=(3618 -(639 + 2 + 25)))) then v151=v103[4 -2 ];do return v13(v101,v151,v151 + v103[1 + 0 + 2 ] );end break;end end elseif (((4920 -(424 + 1381))>=(1727 + 14)) and (v104==((29 + 4) -15))) then if ((v101[v103[1024 -(678 + 344) ]]==v103[4 + 0 ]) or ((4799 -(403 + 222 + 99))==(11065 -6135))) then v80=v80 + ((3 + 24) -(15 + 11)) ;else v80=v103[404 -(72 + 329) ];end else local v196=1970 -(1376 + 594) ;local v197;while true do if (((1491 -(851 + 529 + 111))==v196) or ((991 + 391)>((1618 + 1354) -(65 + 316 + 878)))) then v197=v103[1165 -(269 + 894) ];v101[v197](v13(v101,v197 + (1401 -(1318 + 82)) ,v103[759 -(361 + 395) ]));break;end end end elseif ((v104<=(68 -39)) or ((2487 -(885 + 236))<=(1140 -(110 + 90)))) then if ((v104<=24) or ((9481 -5013)<=(366 + 457))) then if (((1710 -(33 + 953))<(2344 + 2517)) and (v104<=(9 + 12))) then if ((v104==(5 + 15)) or ((2509 -765)>(11880 -7151))) then local v152=0 + 0 ;local v153;local v154;local v155;while true do if ((v152==(1 + 0)) or ((5039 -(504 + 54))<((3454 -(1419 + 90)) -(144 + 979)))) then v155=1275 -(705 + 570) ;for v241=v153,v103[4 + 0 + 0 ] do local v242=0 + 0 ;local v243;while true do if (((0 + 0)==v242) or (((6045 -(229 + 351)) -1878)<=((2376 -(290 + 1417)) -271))) then v243=(1149 -(35 + 802)) -(265 + 47) ;while true do if ((((2068 -874) -(590 + 18 + 586))==v243) or ((700 + 385 + 1100)==(2763 -((1987 -(378 + 1549)) + 416)))) then v155=v155 + (1601 -(621 + 94 + 885)) ;v101[v241]=v154[v155];break;end end break;end end end break;end if (((8539 -3688)>(1100 + 2497 + 785)) and (v152==(0 -0))) then local v236=0 + 0 ;while true do if ((v236==(1 + 0)) or ((1224 -475)>=(5687 -(617 + 280)))) then v152=(3 -2) -0 ;break;end if ((v236==(0 + 0)) or ((860 -409)>(1866 -(111 + 202)))) then v153=v103[1487 -((2408 -1579) + 656) ];v154={v101[v153](v101[v153 + (1390 -(1366 + 23)) ])};v236=1 + 0 ;end end end end else v101[v103[2 + 0 ]][v103[8 -5 ]]=v101[v103[1984 -(918 + 1062) ]];end elseif ((v104<=(44 -22)) or ((3923 + 602)==((17431 -13728) -(16 + 13)))) then v101[v103[135 -(93 + 40) ]]=v37[v103[3]];elseif (((2378 -(116 + 500))<=(4462 + 36)) and (v104==(1439 -(194 + 1222)))) then local v198=0 -0 ;local v199;local v200;local v201;local v202;local v203;local v204;local v205;while true do if ((v198==((133 + 102) -(21 + 211))) or ((2982 + 37)<(436 -143))) then v205=nil;while true do if ((v199==(1720 -(311 + 1408))) or ((4292 + 429)<(4429 -2954))) then local v288=0 + 0 ;while true do if ((((1120 -(52 + 1067)) -0)==v288) or ((1316 -809)>((207 + 3419) -(130 + 1186)))) then v199=1720 -(1255 + 463) ;break;end if (((3467 -(74 + 1052))<(1700 + (1017 -(16 + 14)))) and (v288==(1151 -((1925 -(1759 + 137)) + 1122)))) then v202=nil;v203=nil;v288=1 + (1514 -(1474 + 40)) ;end end end if ((v199==(7 -(1620 -(495 + 1120)))) or ((5814 -(919 + 492))<=(2411 -(200 + 266)))) then v204=nil;v205=nil;v199=2 + 1 ;end if (((4615 -(1699 + 53))<(2370 + 880)) and (v199==(124 -(56 + 65)))) then while true do if ((718<=(4130 -3083)) and (v200==(2 + 0))) then local v311=0 -(0 -0) ;while true do if (((5192 -(269 + 1273))>(2655 + 932)) and (v311==(0 + (64 -(43 + 21))))) then local v342=0 -0 ;while true do if ((v342==(1 + 0)) or ((9466 -7096)>=(17203 -12662))) then v311=1 + 0 + 0 ;break;end if (((5483 -(78 + 653))>=((3230 + 1404) -1536)) and (v342==(0 + 0))) then for v364=1 -0 ,v202 do v101[v203 + v364 ]=v204[v364];end v205=v204[1 + 0 ];v342=1 + 0 + 0 ;end end end if (((1 + 0)==v311) or ((12806 -9713)<=(2494 -(11 + 155)))) then v200=6 -3 ;break;end end end if (((2942 -(244 + 475))>=(1205 + 853)) and (v200==(1526 -(126 + 1399)))) then local v312=1522 -(268 + 1154 + 100) ;local v313;while true do if ((v312==(188 -(80 + 17 + 91))) or (((1193 + 1113) -(730 + 145))==(2018 + 2057))) then v313=0 -0 ;while true do if ((v313==(1 + 0)) or ((4827 -(621 + 19))<((6573 -3452) + 2))) then v200=2;break;end if ((v313==(0 + 0)) or ((7527 -4376)>(6090 -(1124 + 260)))) then v203=v201 + (4 -2) ;v204={v101[v201](v101[v201 + 1 + 0 ],v101[v203])};v313=(2209 -1310) -((3521 -2662) + 39) ;end end break;end end end if ((v200==(0 + 0)) or ((2515 -(390 + 90))==4641)) then local v314=1402 -(1128 + 274) ;while true do if (((1335 + 1992)>=(2506 -1523)) and (v314==((1 -0) + 0))) then v200=122 -(9 + 112) ;break;end if (((3045 -(71 + 588))<((6531 -(372 + 1382)) -(254 + 423))) and (v314==0)) then local v343=0 -0 ;while true do if (((1 + 0)==v343) or ((2572 + 849)<=(1545 + 1704))) then v314=3 -2 ;break;end if ((v343==((2025 -(93 + 182)) -(769 + 981))) or ((10356 -5912)==(601 -414))) then v201=v103[920 -(398 + (956 -436)) ];v202=v103[8 -4 ];v343=1 + 0 ;end end end end end if (((730 + 4116)>(516 -(120 + 57))) and (v200==(1569 -(1160 + 406)))) then if (((1468 + 3317)<=((2591 + 3331) -(481 + 457))) and v205) then local v328=1474 -((3352 -(817 + 1181)) + 120) ;while true do if ((v328==(0 + 0)) or ((987 + 209)>(4784 -2814))) then v101[v203]=v205;v80=v103[1911 -(190 + 1718) ];break;end end else v80=v80 + (1301 -(1234 + 66)) ;end break;end end break;end if (((0 -0)==v199) or ((1501 + 193)>(7132 -5266))) then local v289=0 + 0 ;while true do if ((v289==(0 -0)) or ((221 + 280)==(3106 -(1081 + 606)))) then v200=729 -(325 + 404) ;v201=nil;v289=(1380 -(754 + 623)) -(1227 -(402 + 823)) ;end if (((596 + (2456 -1469))<(5273 -3402)) and (v289==(1 + 0))) then v199=1;break;end end end end break;end if ((v198==(1217 -(415 + 802))) or ((5973 -(928 + 791))<(6609 -3981))) then v199=0 + 0 ;v200=nil;v198=1 + 0 ;end if (((6113 -(30 + 1793))>=(3088 -(500 + 516))) and ((2 -1)==v198)) then v201=nil;v202=nil;v198=5 -3 ;end if ((((19669 -7904) -6857)>=(3757 -(443 + 842))) and (v198==(1 + 1))) then v203=nil;v204=nil;v198=3 + 0 ;end end else local v206=0 -(0 + 0) ;local v207;local v208;while true do if (((615 + 2803)>=(6901 -4951)) and (v206==(0 + 0))) then v207=v103[469 -(49 + 417) ];v208=v101[v207];v206=1 + 0 ;end if ((v206==((4 -2) -1)) or ((261 + 8 + 54)>=(3313 + 162))) then for v257=v207 + (1497 -(1334 + 162)) ,v103[527 -(183 + 225 + 115) ] do v208=v208   .. v101[v257] ;end v101[v103[2 -0 ]]=v208;break;end end end elseif ((v104<=(22 + 4)) or ((163 + 800)==(761 -(190 + 24)))) then if ((v104==(53 -28)) or ((1308 + 2265 + 703)<=(568 + 491))) then v101[v103[3 -1 ]]();else local v160=76 -(63 + 13) ;local v161;local v162;while true do if (((1 + 0)==v160) or (3415==(2185 + 2143))) then while true do if (((0 -(0 -0))==v161) or ((4252 -(970 + 571))>(5660 -(1734 + 240)))) then v162=v103[3 -(1 + 0) ];v101[v162]=v101[v162](v13(v101,v162 + (997 -(363 + 633)) ,v103[(336 + 1345) -(1317 + 361) ]));break;end end break;end if ((v160==(0 -(0 -0))) or ((1453 -(189 + 854))<(588 -262))) then v161=0 + 0 ;v162=nil;v160=1 + 0 ;end end end elseif (((8036 -6213)<(2177 + 44)) and (v104<=(536 -(466 + 43)))) then local v163=0 + 0 + (1073 -(35 + 1038)) ;local v164;local v165;while true do if (((75 + 40)==(312 -(137 + 56 + 4))) and (v163==(0 -0))) then v164=(984 + 530) -(682 + 119 + 713) ;v165=nil;v163=1414 -(1091 + 322) ;end if ((v163==(2 -1)) or ((2079 + 2222)<(151 + 1787))) then while true do if (((628 -(397 + 231))==v164) or ((3810 -(517 + 70))<(3269 -1410))) then v165=v103[2 + 0 ];v101[v165](v13(v101,v165 + (1891 -(1110 + 780)) ,v81));break;end end break;end end elseif (((2157 + 2246)>(69 + (2008 -(1659 + 95)))) and (v104==((18 + 80) -70))) then if (((381 + 1035)<=(3253 -(220 + 1409))) and (v101[v103[3 -1 ]]~=v103[11 -7 ])) then v80=v80 + (603 -(239 + 363)) ;else v80=v103[(2033 -(861 + 102)) -(241 + 826) ];end else v101[v103[2 + 0 ]]=v101[v103[8 -5 ]];end elseif (((4650 -(19 + 1828))<=(2599 + 1357)) and (v104<=(159 -125))) then if ((v104<=(65 -(83 -49))) or ((33 + 1298)==(3307 -(380 + 111)))) then if ((v104>(418 -(162 + 226))) or (3689<(2106 -(560 + 64)))) then local v166=0 -0 ;local v167;local v168;while true do if ((1512<=((13829 -9229) -(519 + 895 + 228))) and (v166==(0 -0))) then local v237=0 -0 ;while true do if ((v237==(1323 -(177 + 1145))) or (((3195 -1459) + 1653)<(3783 -(678 + 76)))) then v166=1828 -(1775 + 52) ;break;end if (((15993 -(29775 -17857))>=(3335 -1361)) and ((0 -0)==v237)) then v167=0 -0 ;v168=nil;v237=1 + 0 ;end end end if (((4244 -((763 -(180 + 550)) + 775))<(2419 + 2152)) and (v166==(1 + 0))) then while true do if ((v167==(0 + 0)) or ((645 -379)>=(138 + 4451))) then v168=v103[785 -(151 + 632) ];v101[v168]=v101[v168](v101[v168 + (79 -(46 + 32)) ]);break;end end break;end end else local v169=576 -(89 + 487) ;local v170;local v171;local v172;local v173;local v174;while true do if (((2355 -(404 + 163))<=(437 + 1420)) and (v169==(1 + 0))) then v172=nil;v173=nil;v169=(1 + 2) -1 ;end if (((16001 -(802 + 11738))==(346 + 3115)) and (v169==(1366 -(580 + 784)))) then v174=nil;while true do if (((1 + 0)==v170) or ((5715 -(560 + 380))<(856 + 3799))) then local v263=0 + (0 -0) ;local v264;while true do if ((v263==(0 + 0)) or ((8155 -5400)>(3681 -(770 + 92)))) then v264=1404 -(802 + 602) ;while true do if (((9114 -4863)>=(5031 -(471 + 411))) and (v264==(0 + (0 -0)))) then v81=(v173 + v171) -(1 + 0) ;v174=0 -0 ;v264=3 -2 ;end if (((1853 -(394 + 108 + 182))==(2602 -1433)) and (v264==(1 -0))) then v170=4 -2 ;break;end end break;end end end if ((((4294 + 382) -(25 + 362))>=(576 + 2487)) and (v170==(0 + 0))) then local v265=0 + (229 -(130 + 99)) ;local v266;while true do if ((v265==(19 -(18 + 1))) or (295==(5904 -(311 + 723)))) then v266=1005 -(476 + 529) ;while true do if ((v266==(0 + 0 + 0)) or ((12344 -8167)>=4659)) then local v324=0 -0 ;while true do if ((v324==(1284 -(22 + 260 + 1001))) or ((2492 -1742)>(5150 -2480))) then v266=1375 -(355 + 1019) ;break;end if (((6208 -3111)>=1267) and (v324==(1016 -(789 + 227)))) then v171=v103[2 + 0 ];v172,v173=v98(v101[v171](v101[v171 + ((1655 -(734 + 431)) -(20 + 469)) ]));v324=1 + 0 + 0 ;end end end if ((v266==(1 + 0)) or ((2082 -959)<=((1580 -(780 + 3)) -589))) then v170=3 -2 ;break;end end break;end end end if (((5906 -3583)<(8542 -5407)) and (v170==(3 -1))) then for v272=v171,v81 do local v273=0 + 0 ;local v274;while true do if ((v273==(21 -(7 + 14))) or ((3776 -(568 + 56))<(716 -373))) then v274=537 -((828 -484) + 193) ;while true do if ((v274==(0 -0)) or ((11194 -6366)<=3881)) then v174=v174 + (426 -(141 + 284)) ;v101[v272]=v172[v174];break;end end break;end end end break;end end break;end if (((11059 -(1459 + 6082))<=(5061 -(231 + 380 + 792))) and (v169==(660 -(290 + 370)))) then local v238=411 -(118 + 293) ;while true do if ((v238==(927 -(44 + 882))) or ((849 + 352)==(1965 -(180 + 39)))) then v169=2 -1 ;break;end if ((v238==(0 + 0)) or ((299 + 4059)<=(1700 + 968))) then v170=1158 -((1119 -(1026 + 74)) + 1139) ;v171=nil;v238=1417 -(20 + 1396) ;end end end end end elseif (((16060 -12138)<(19785 -15746)) and (v104<=((1791 -(208 + 1559)) + 1 + 7))) then if ((v101[v103[2 + 0 ]]~=v101[v103[14 -10 ]]) or ((5432 -((1889 -(427 + 414)) + (515 -404)))<(956 + 21))) then v80=v80 + (1260 -(754 + 505)) ;else v80=v103[1 + 2 ];end elseif ((v104==(7 + 26)) or ((1786 -1132)>(2297 + (4003 -1730)))) then v101[v103[(6 -2) -2 ]]=v103[1560 -(1522 + (160 -125)) ];else local v214=0 -0 ;local v215;local v216;local v217;local v218;while true do if (((3353 -(170 + 87))>=(2500 -1290)) and (v214==(0 -0))) then local v250=0 -(0 -0) ;while true do if ((v250==(0 -0)) or ((2756 -(783 + 400))>(2349 + 1512))) then v215=0 -0 ;v216=nil;v250=1 + 0 ;end if (((4435 + 79)>=(3323 -(117 + (155 -87)))) and (v250==(1 -0))) then v214=1 -0 ;break;end end end if ((v214==(844 -(463 + 380))) or ((3845 + 1126)==(1501 -553))) then local v251=0 + 0 ;while true do if ((v251==(0 -0)) or ((344 + 188 + (1443 -(434 + 352)))>=(417 + 1817))) then v217=nil;v218=nil;v251=1 -0 ;end if (((883 + 3739)>(4017 -(213 + 1306))) and (v251==(1 + 0))) then v214=6 -4 ;break;end end end if (((5886 -(492 + 1468))<=(4917 -(14 + 42))) and (v214==(1414 -(776 + 546 + 90)))) then while true do if (((1108 + 1054)>=((700 + 666) -709)) and (v215==((1816 -(1773 + 43)) + 0))) then local v290=(0 -0) -0 ;while true do if (((4320 -(8 + 147))>(2477 + 435)) and (v290==(1 + 0))) then v215=4 -3 ;break;end if ((v290==(0 -0)) or ((1538 -1065)>=(2936 -((1171 -(320 + 265)) + 688)))) then local v315=0 -0 ;while true do if (((2219 -(265 + 829))<=(4688 + 121)) and (v315==(1 -0))) then v290=(1303 -(743 + 559)) + (1474 -(944 + 530)) ;break;end if (((0 -0)==v315) or ((3030 -((103 -63) + 45 + 25))<=(1454 + 897))) then v216=v103[(946 -(68 + 876)) + 0 ];v217=v101[v216];v315=401 -(309 + (307 -(57 + 159))) ;end end end end end if ((((24416 -13225) -(3686 + 4273))<((2834 + 1722) -(27 + 45))) and (v215==(679 -(353 + 325)))) then v218=v103[66 -(61 + 2) ];for v298=3 -2 ,v218 do v217[v298]=v101[v216 + v298 ];end break;end end break;end end end elseif ((v104<=(542 -(32 + 473))) or ((588 + 3465)<=(676 -382))) then if ((v104<=(91 -56)) or ((51 + 156)>=((4184 -3073) -(90 + 252)))) then if (v101[v103[2 + 0 ]] or ((39 + 997)==(63 + 366 + 1997))) then v80=v80 + 1 ;else v80=v103[1 + 2 ];end elseif (((3502 -1545)<(6761 -4029)) and (v104==(12 + (106 -(46 + 36))))) then v101[v103[1852 -(853 + 321 + 676) ]]=v103[3 -0 ]~=(0 + 0) ;else local v221=0;local v222;local v223;while true do if (((14296 -10285)<(6818 -(433 + 1511))) and (v221==(1908 -(1716 + 191)))) then for v267=v222 + (1 -0) ,v103[7 -4 ] do v7(v223,v101[v267]);end break;end if ((v221==(0 + 0)) or ((13583 -10168)==(618 + 565))) then local v252=0 + 0 ;while true do if ((((2526 -882) -(1014 + 629))==v252) or ((561 -((15 -8) + 81))>=(5147 -(319 + 790)))) then v221=2 -1 ;break;end if (((668 + 1875)<(6265 -1893)) and (v252==(1589 -(528 + 1061)))) then v222=v103[8 -6 ];v223=v101[v222];v252=1 + 0 ;end end end end end elseif ((v104<=(34 + 4)) or ((3804 -2880)>=(3734 -2252))) then v101[v103[1 + 1 ]][v103[831 -(45 + 783) ]]=v103[8 -4 ];elseif (((1872 + 774 + 533)<=(9684 -5327)) and (v104==(1875 -(1535 + 301)))) then v101[v103[1133 -(133 + (2339 -1341)) ]]= #v101[v103[3]];else v101[v103[2 + 0 ]]=v101[v103[500 -(210 + 287) ]][v103[19 -15 ]];end v80=v80 + (1863 -(1456 + 406)) ;break;end end break;end end end end;v79=3;end if (v79==3) then A,B=v28(v11(v84));if  not A[1] then local v108=v36[4][v80] or "?" ;error("Script error at ["   .. v108   .. "]:"   .. A[2] );else return v13(A,2,B);end break;end if (1==v79) then v82={...};v83=v12("#",...) -1 ;v79=2;end end end;end end end;return v30(v29(),{},v17)(...);end if (v18==3) then v24=nil;v24=function()local v63,v64,v65,v66=v1(v16,v19,v19 + (9 -6) );v19=v19 + (988 -(876 + 108)) ;return (v66 * (46544460 -29767244)) + (v65 * (110500 -44964)) + (v64 * (331 -(16 + 5 + 54))) + v63 ;end;v25=nil;v18=4;end if (v18==5) then v27=v24;v28=nil;v28=function(...)return {...},v12("#",...);end;v18=6;end end end vv9(),...);end